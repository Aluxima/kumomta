kind: pipeline
name: rust
type: docker

steps:
- name: restore-build-cache
  image: meltwater/drone-cache
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: S3_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: S3_SECRET_KEY  
  settings:
    bucket: drone-ci-cache
    restore: true
    cache_key: '{{ .Repo.Name }}_{{ checksum "Cargo.lock" }}_{{ arch }}_{{ os }}'
    archive_format: "gzip"
    mount:
      - .drone-cargo/registry/index/
      - .drone-cargo/registry/cache/
      - .drone-cargo/git/db/      

- name: test
  image: rust:latest
  environment:
    CARGO_HOME: .drone-cargo
  commands:
  - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
  - apt update
  - ./get-deps.sh
  - cargo install cargo-nextest --locked
  - cargo build --verbose --release
  - cargo nextest run --release

- name: update-build-cache
  image: meltwater/drone-cache
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: S3_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: S3_SECRET_KEY  
  settings:
    bucket: drone-ci-cache
    rebuild: true
    cache_key: '{{ .Repo.Name }}_{{ checksum "Cargo.lock" }}_{{ arch }}_{{ os }}'
    archive_format: "gzip"
    mount:
      - .drone-cargo/registry/index/
      - .drone-cargo/registry/cache/
      - .drone-cargo/git/db/      
---
kind: pipeline
name: ubuntu-22
type: docker

steps:
- name: build
  image: ubuntu:22.04
  commands:
  - false
  - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
  - apt update
  - apt install -y curl git
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  - . $HOME/.cargo/env
  - ./get-deps.sh
  - cargo install cargo-nextest --locked
  - cargo build --verbose --release
  - cargo nextest run --release
  - ./assets/build-deb.sh

